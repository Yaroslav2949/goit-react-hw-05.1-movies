{"version":3,"file":"static/js/247.65a5c4ee.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchMovieCast, onFetchError } from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { LiStyle, UlStyle } from 'components/MoviesList/MoviesList.styled';\nconst endPoint = '/movie';\n\nconst Cast = () => {\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    setLoading(true);\n    fetchMovieCast(endPoint, movieId)\n      .then(data => {\n        setCast(data.cast);\n      })\n      .catch(onFetchError)\n      .finally(setLoading(false));\n  }, [movieId]);\n    return (\n      <>\n        <h3>Cast:</h3>\n        {loading && <Loader />}\n        {cast && (\n          <UlStyle>\n            {cast.map(({ id, name, character, profile_path }) => (\n              <LiStyle key={id}>\n                <b>{name}</b>\n                <p>character:{character}</p>\n                <img\n                  src={\n                    profile_path ? (\n                      `https://image.tmdb.org/t/p/w500/${profile_path}` //лінк вказаний в документації бекенду для отримання картинок куди передаємо отриманий лінк кожної картинки\n                    ) : (\n                      <p>Ups, ... noImagefound</p>\n                    )\n                  }\n                  alt={name}\n                  width=\"100\"\n                />\n              </LiStyle>\n            ))}\n          </UlStyle>\n        )}\n      </>\n    );\n};\n\nexport default Cast;\n","\nimport { Circles } from \"react-loader-spinner\";\n\nexport const Loader = () =>\n    \n    \n  (  <Circles\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  ariaLabel=\"circles-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  />)","import styled from \"styled-components\";\nexport const UlStyle = styled.ul`\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const LiStyle = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 10px;\n  width: 154px;\n  max-height: 400px;\n  cursor: pointer;\n  overflow: hidden;\n`;\n\n\nexport const WrapCardStyle = styled.div`\n  min-height: 169px;\n  display: flex;\n  gap: 5px;\n  flex-direction: column;\n`;","import axios from 'axios';\nimport { Notify } from 'notiflix';\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '43596775cda6588db61d2519acdb98b6'; // персональний ключ\\\n\nexport const paramsForNotify = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '24px',\n};\n\nexport async function fetchMovies(endPoint) {\n    const url = `${baseURL}${endPoint}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data\n\n}\n\nexport async function fetchSearhMovies(endPoint, query) {\n  const url = `${baseURL}${endPoint}?api_key=${API_KEY}&query=${query}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n  const url = `${baseURL}${endPoint}/${movieId}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieCast(endPoint, movieId) {\n   const url = `${baseURL}${endPoint}/${movieId}/credits?api_key=${API_KEY}`;\n   const response = await axios.get(url);\n   return response.data;\n}\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n  const url = `${baseURL}${endPoint}/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\n\n\n\nexport function onFetchError () {\n    Notify.failure('Oops! Something went wrong! Try reloading the page', {\n      position: 'center-center',\n      timeout: 3000,\n      width: '400px',\n      fontSize: '24px',\n    }); \n}"],"names":["_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","then","data","catch","onFetchError","finally","_jsxs","_Fragment","children","_jsx","Loader","UlStyle","map","_ref","id","name","character","profile_path","LiStyle","src","concat","alt","width","Circles","height","color","ariaLabel","wrapperStyle","wrapperClass","visible","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","WrapCardStyle","_templateObject3","baseURL","API_KEY","fetchMovies","_x","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","url","response","_context","prev","next","axios","sent","abrupt","stop","fetchSearhMovies","_x2","_x3","_fetchSearhMovies","_callee2","query","_context2","fetchMovieDetails","_x4","_x5","_fetchMovieDetails","_callee3","_context3","_x6","_x7","_fetchMovieCast","_callee4","_context4","fetchMovieReviews","_x8","_x9","_fetchMovieReviews","_callee5","_context5","Notify","position","timeout","fontSize"],"sourceRoot":""}