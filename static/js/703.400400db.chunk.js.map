{"version":3,"file":"static/js/703.400400db.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["\nimport { Circles } from \"react-loader-spinner\";\n\nexport const Loader = () =>\n    \n    \n  (  <Circles\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  ariaLabel=\"circles-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  />)","import { LiStyle, UlStyle, WrapCardStyle } from \"./MoviesList.styled\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation()\n  console.log(location);\n     return (\n       <UlStyle>\n         {films.map(({ id, title,  poster_path }) => (\n           <Link to={`/movies/${id}`} key={id} state={{ from: location }} >\n             <LiStyle key={id}>\n               <img\n                 src={\n                   poster_path ? (\n                     `https://image.tmdb.org/t/p/w500/${poster_path}` //лінк вказаний в документації бекенду для отримання картинок куди передаємо отриманий лінк кожної картинки\n                   ) : (\n                     <p>Ups, ... noImagefound</p>\n                   )\n                 }\n                 alt={title}\n                 width=\"154\"\n                 height=\"231\"\n               />\n\n               <WrapCardStyle>\n                 <h3>{title}</h3>\n                 {/* <p>{overview}</p> */}\n               </WrapCardStyle>\n             </LiStyle>\n           </Link>\n         ))}\n       </UlStyle>\n     );\n  \n\n    \n}\n\nexport default MoviesList","import styled from \"styled-components\";\nexport const UlStyle = styled.ul`\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const LiStyle = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 10px;\n  width: 154px;\n  max-height: 400px;\n  cursor: pointer;\n  overflow: hidden;\n`;\n\n\nexport const WrapCardStyle = styled.div`\n  min-height: 169px;\n  display: flex;\n  gap: 5px;\n  flex-direction: column;\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n\n  margin-top: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: rgb(128, 128, 128);\n  border: 1px solid #0d57aa;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`;\n","import { Button, Form, Input } from './SearchBar.styled';\nconst SearchBar = ({ onSubmitSearchBar }) => {\n  return (\n    <Form onSubmit={onSubmitSearchBar}>\n      <Input type=\"text\" name=\"query\" placeholder=\"Search movies\" />\n\n      <Button type=\"submit\">Searh Movie</Button>\n    </Form>\n  );\n};\nexport default SearchBar;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearhMovies, onFetchError } from 'services/api';\nimport { Notify } from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\n const paramsForNotify = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '24px',\n};\n\nconst endPoint = '/search/movie';\n\nconst Movies = () => {\n  const [searhfilms, setSearhFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  console.log(searchParams.get('query'));\n \n  \n  const searchQuery = searchParams.get('query')??'';\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    if (searhfilms.length > 0) {\n      return\n    };\n      setLoading(true)\n    fetchSearhMovies(endPoint, searchQuery)\n      .then(data => {\n        setSearhFilms(data.results);\n      })\n      .catch(onFetchError)\n      .finally(setLoading(false));\n  }, [searchQuery, searhfilms]);\n\n  const onSubmitSearchBar = (e) => {\n    e.preventDefault();\n    const searchValue = e.target.query.value;\n    if (!searchValue) {\n      return Notify.info('Enter your request, please!', paramsForNotify);\n    }\n    setSearchParams({ query: searchValue }); // записуємо пошукове значення в URL\n   \n    //  searchParams.set( 'query', searchValue );\n    //     setSearchParams(searchParams);можна мутувати обєкт параметрів  searchParams за допомогою методу set якщо параметрів там більше одного змінюючи тільки одну властивість в ньому і вже потім записати в setSearchParams таким чином не втрачається решта параметрів які не зміюємо при записі\n    setSearhFilms([]);\n    e.target.reset();\n  }\n    \n\n  return (\n    <>\n      {loading && <Loader/>}\n      <SearchBar onSubmitSearchBar={onSubmitSearchBar} />\n      <MoviesList films={searhfilms} />\n    </>\n  );\n};\nexport default Movies;\n\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '43596775cda6588db61d2519acdb98b6'; // персональний ключ\\\n\nexport const paramsForNotify = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '24px',\n};\n\nexport async function fetchMovies(endPoint) {\n    const url = `${baseURL}${endPoint}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data\n\n}\n\nexport async function fetchSearhMovies(endPoint, query) {\n  const url = `${baseURL}${endPoint}?api_key=${API_KEY}&query=${query}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n  const url = `${baseURL}${endPoint}/${movieId}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieCast(endPoint, movieId) {\n   const url = `${baseURL}${endPoint}/${movieId}/credits?api_key=${API_KEY}`;\n   const response = await axios.get(url);\n   return response.data;\n}\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n  const url = `${baseURL}${endPoint}/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\n\n\n\nexport function onFetchError () {\n    Notify.failure('Oops! Something went wrong! Try reloading the page', {\n      position: 'center-center',\n      timeout: 3000,\n      width: '400px',\n      fontSize: '24px',\n    }); \n}"],"names":["Loader","_jsx","Circles","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","_ref","films","location","useLocation","console","log","UlStyle","children","map","_ref2","id","title","poster_path","Link","to","concat","state","from","_jsxs","LiStyle","src","alt","WrapCardStyle","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","Form","Input","Button","onSubmitSearchBar","onSubmit","type","name","placeholder","paramsForNotify","position","timeout","fontSize","_searchParams$get","_useState","useState","_useState2","_slicedToArray","searhfilms","setSearhFilms","_useState3","_useState4","loading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","searchQuery","useEffect","length","fetchSearhMovies","then","data","results","catch","onFetchError","finally","_Fragment","SearchBar","e","preventDefault","searchValue","target","query","value","Notify","reset","MoviesList","baseURL","API_KEY","fetchMovies","_x","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","url","response","_context","prev","next","axios","sent","abrupt","stop","_x2","_x3","_fetchSearhMovies","_callee2","_context2","fetchMovieDetails","_x4","_x5","_fetchMovieDetails","_callee3","movieId","_context3","fetchMovieCast","_x6","_x7","_fetchMovieCast","_callee4","_context4","fetchMovieReviews","_x8","_x9","_fetchMovieReviews","_callee5","_context5"],"sourceRoot":""}